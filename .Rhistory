summarize(AvgPrice = mean(UnitPrice), AvgQuantity = mean(Quantity),
Total = sum(Total))
clients <- df %>%
group_by(InvoiceNo) %>%
summarize(TotalInvoice = sum(Total)) %>%
left_join(invoices, by = "InvoiceNo") %>%
mutate(Weekend = wday(InvoiceDate, week_start = 1) < 6,
UK = as.integer(Country == "United Kingdom")) %>%
group_by(CustomerID) %>%
summarize(Invoices = n(), AvgInvoice = mean(TotalInvoice),
Weekend = mean(Weekend), UK = mean(UK),
PerWeek = n() / as.numeric(difftime(max(InvoiceDate),
min(InvoiceDate),
units = "weeks"))) %>%
mutate(PerWeek = ifelse(PerWeek == Inf, 0, PerWeek)) %>%
left_join(clients, by = "CustomerID")
clients$Invoices=log(clients$Invoices)
clients$AvgInvoice=log(clients$AvgInvoice)
clients$PerWeek=log(clients$PerWeek)
clients$AvgPrice=log(clients$AvgPrice)
clients$AvgQuantity=log(clients$AvgQuantity)
clients$Total=log(clients$Total)
find_outl(clients$AvgInvoice,clients)
clients<-rmv_outl(clients$AvgInvoice,clients)
find_outl(clients$AvgInvoice,clients)
ggplot(clients, aes(y=AvgInvoice))+
geom_boxplot()+
scale_y_log10()
find_outl <- function(log_var, df_with_out) {
primer<-summary(log_var)[2]
tercer<-summary(log_var)[5]
iqr<-IQR(log_var)
Tmin = primer-(1.5*iqr)
Tmax = tercer+(1.5*iqr)
out=log_var[which(log_var < Tmin || log_var > Tmax)]
return(out)
}
clients<-rmv_outl(clients$Invoices, clients)
find_outl(clients$Invoices, clients)
find_outl(clients$AvgInvoice,clients)
clients<-rmv_outl(clients$AvgInvoice,clients)
find_outl(clients$AvgInvoice,clients)
find_outl(clients$AvgPrice, clients)
clients <- df %>%
group_by(CustomerID) %>%
summarize(AvgPrice = mean(UnitPrice), AvgQuantity = mean(Quantity),
Total = sum(Total))
clients <- df %>%
group_by(InvoiceNo) %>%
summarize(TotalInvoice = sum(Total)) %>%
left_join(invoices, by = "InvoiceNo") %>%
mutate(Weekend = wday(InvoiceDate, week_start = 1) < 6,
UK = as.integer(Country == "United Kingdom")) %>%
group_by(CustomerID) %>%
summarize(Invoices = n(), AvgInvoice = mean(TotalInvoice),
Weekend = mean(Weekend), UK = mean(UK),
PerWeek = n() / as.numeric(difftime(max(InvoiceDate),
min(InvoiceDate),
units = "weeks"))) %>%
mutate(PerWeek = ifelse(PerWeek == Inf, 0, PerWeek)) %>%
left_join(clients, by = "CustomerID")
clients$Invoices=log(clients$Invoices)
clients$AvgInvoice=log(clients$AvgInvoice)
clients$PerWeek=log(clients$PerWeek)
clients$AvgPrice=log(clients$AvgPrice)
clients$AvgQuantity=log(clients$AvgQuantity)
clients$Total=log(clients$Total)
find_outl(clients$Invoices, clients)
find_outl <- function(log_var, df_with_out) {
primer<-summary(log_var)[2]
tercer<-summary(log_var)[5]
iqr<-IQR(log_var)
Tmin = primer-(1.5*iqr)
Tmax = tercer+(1.5*iqr)
out=log_var[which(log_var < Tmin | log_var > Tmax)]
return(out)
}
find_outl(clients$Invoices, clients)
clients<-rmv_outl(clients$Invoices, clients)
find_outl(clients$Invoices, clients)
find_outl(clients$AvgInvoice,clients)
clients<-rmv_outl(clients$AvgInvoice,clients)
find_outl(clients$AvgInvoice,clients)
find_outl(clients$AvgPrice, clients)
clients<-rmv_outl(clients$AvgPrice, clients)
find_outl(clients$AvgPrice, clients)
clients<-rmv_outl(clients$AvgQuantity, clients)
find_outl(clients$AvgQuantity, clients)
clients<-rmv_outl(clients$Total, clients)
find_outl(clients$Total, clients)
find_outl(clients$Invoices, clients)
find_outl(clients$AvgInvoice,clients)
find_outl(clients$AvgInvoice,clients)
find_outl(clients$AvgPrice, clients)
find_outl(clients$AvgQuantity, clients)
find_outl(clients$Total, clients)
clients<-rmv_outl(clients$AvgInvoice,clients)
find_outl(clients$AvgInvoice,clients)
clients<-rmv_outl(clients$AvgInvoice,clients)
clients<-rmv_outl(clients$AvgPrice, clients)
find_outl(clients$AvgInvoice,clients)
find_outl(clients$AvgInvoice,clients)
clients<-rmv_outl(clients$AvgPrice, clients)
find_outl(clients$AvgPrice, clients)
clients<-rmv_outl(clients$AvgQuantity, clients)
find_outl(clients$AvgQuantity, clients)
clients<-rmv_outl(clients$AvgQuantity, clients)
find_outl(clients$AvgQuantity, clients)
clients<-rmv_outl(clients$AvgQuantity, clients)
find_outl(clients$AvgQuantity, clients)
clients<-rmv_outl(clients$Total, clients)
find_outl(clients$Total, clients)
find_outl(clients$Invoices, clients)
find_outl(clients$AvgInvoice,clients)
iqr<-IQR(log_var)
clients<-rmv_outl(clients$AvgInvoice,clients)
find_outl(clients$AvgInvoice,clients)
find_outl(clients$AvgPrice, clients)
find_outl(clients$AvgQuantity, clients)
find_outl(clients$Total, clients)
find_outl(clients$Invoices, clients)
find_outl(clients$AvgInvoice,clients)
find_outl(clients$AvgInvoice,clients)
find_outl(clients$AvgPrice, clients)
clients<-rmv_outl(clients$AvgPrice, clients)
find_outl(clients$AvgPrice, clients)
find_outl(clients$AvgQuantity, clients)
clients<-rmv_outl(clients$AvgQuantity, clients)
find_outl(clients$AvgQuantity, clients)
find_outl(clients$Total, clients)
ggplot(clients, aes(y=Invoices))+
geom_boxplot()
ggplot(clients, aes(y=AvgInvoice))+
geom_boxplot()
ggplot(clients, aes(y=AvgPrice))+
geom_boxplot()
ggplot(clients, aes(y=AvgQuantity))+
geom_boxplot()
ggplot(clients, aes(y=Total))+
geom_boxplot()
clients_cluster<-clients%>%
select(-CustomerID)
#Se usa scale por las escalan var√≠an mucho entre ellas
colSums(is.na(clients_cluster))
clients <- df %>%
group_by(CustomerID) %>%
summarize(AvgPrice = mean(UnitPrice), AvgQuantity = mean(Quantity),
Total = sum(Total))
clients <- df %>%
group_by(InvoiceNo) %>%
summarize(TotalInvoice = sum(Total)) %>%
left_join(invoices, by = "InvoiceNo") %>%
mutate(Weekend = wday(InvoiceDate, week_start = 1) < 6,
UK = as.integer(Country == "United Kingdom")) %>%
group_by(CustomerID) %>%
summarize(Invoices = n(), AvgInvoice = mean(TotalInvoice),
Weekend = mean(Weekend), UK = mean(UK),
PerWeek = n() / as.numeric(difftime(max(InvoiceDate),
min(InvoiceDate),
units = "weeks"))) %>%
mutate(PerWeek = ifelse(PerWeek == Inf, 0, PerWeek)) %>%
left_join(clients, by = "CustomerID")
ggplot(clients, aes(y=Weekend))+
geom_boxplot()
ggplot(clients, aes(y=UK))+
geom_boxplot()
find_outl(clients$IWeekend, clients)
find_outl(clients$Weekend, clients)
clients<-rmv_outl(clients$Weekend, clients)
find_outl(clients$Weekend, clients)
clients<-rmv_outl(clients$Weekend, clients)
find_outl(clients$Weekend, clients)
clients <- df %>%
group_by(CustomerID) %>%
summarize(AvgPrice = mean(UnitPrice), AvgQuantity = mean(Quantity),
Total = sum(Total))
clients <- df %>%
group_by(InvoiceNo) %>%
summarize(TotalInvoice = sum(Total)) %>%
left_join(invoices, by = "InvoiceNo") %>%
mutate(Weekend = wday(InvoiceDate, week_start = 1) < 6,
UK = as.integer(Country == "United Kingdom")) %>%
group_by(CustomerID) %>%
summarize(Invoices = n(), AvgInvoice = mean(TotalInvoice),
Weekend = mean(Weekend), UK = mean(UK),
PerWeek = n() / as.numeric(difftime(max(InvoiceDate),
min(InvoiceDate),
units = "weeks"))) %>%
mutate(PerWeek = ifelse(PerWeek == Inf, 0, PerWeek)) %>%
left_join(clients, by = "CustomerID")
rmv_outl <- function(outs, df_with_out) {
primer<-summary(outs)[2]
tercer<-summary(outs)[5]
iqr<-IQR(outs)
Tmin = primer-(1.5*iqr)
Tmax = tercer+(1.5*iqr)
df_with_out<- subset(df_with_out,
outs > (Tmin) & outs < (Tmax))
return(df_with_out)
}
find_outl <- function(outs, df_with_out) {
primer<-summary(outs)[2]
tercer<-summary(outs)[5]
iqr<-IQR(outs)
Tmin = primer-(1.5*iqr)
Tmax = tercer+(1.5*iqr)
out=log_var[which(outs < Tmin | outs > Tmax)]
return(out)
}
find_outl(clients$Weekend, clients)
find_outl <- function(outs, df_with_out) {
primer<-summary(outs)[2]
tercer<-summary(outs)[5]
iqr<-IQR(outs)
Tmin = primer-(1.5*iqr)
Tmax = tercer+(1.5*iqr)
out=log_var[which(outs < Tmin | outs > Tmax)]
return(out)
}
find_outl <- function(outs, df_with_out) {
primer<-summary(outs)[2]
tercer<-summary(outs)[5]
iqr<-IQR(outs)
Tmin = primer-(1.5*iqr)
Tmax = tercer+(1.5*iqr)
out=outs[which(outs < Tmin | outs > Tmax)]
return(out)
}
find_outl(clients$Weekend, clients)
clients<-rmv_outl(clients$Weekend, clients)
find_outl(clients$Weekend, clients)
rmv_outl <- function(outs, df_with_out) {
primer<-summary(outs)[2]
tercer<-summary(outs)[5]
iqr<-IQR(outs)
Tmin = primer-(1.5*iqr)
Tmax = tercer+(1.5*iqr)
nuevo<- subset(df_with_out,
outs > (Tmin) & outs < (Tmax))
return(df_with_out)
}
clients <- df %>%
group_by(CustomerID) %>%
summarize(AvgPrice = mean(UnitPrice), AvgQuantity = mean(Quantity),
Total = sum(Total))
clients <- df %>%
group_by(InvoiceNo) %>%
summarize(TotalInvoice = sum(Total)) %>%
left_join(invoices, by = "InvoiceNo") %>%
mutate(Weekend = wday(InvoiceDate, week_start = 1) < 6,
UK = as.integer(Country == "United Kingdom")) %>%
group_by(CustomerID) %>%
summarize(Invoices = n(), AvgInvoice = mean(TotalInvoice),
Weekend = mean(Weekend), UK = mean(UK),
PerWeek = n() / as.numeric(difftime(max(InvoiceDate),
min(InvoiceDate),
units = "weeks"))) %>%
mutate(PerWeek = ifelse(PerWeek == Inf, 0, PerWeek)) %>%
left_join(clients, by = "CustomerID")
rmv_outl <- function(outs, df_with_out) {
primer<-summary(outs)[2]
tercer<-summary(outs)[5]
iqr<-IQR(outs)
Tmin = primer-(1.5*iqr)
Tmax = tercer+(1.5*iqr)
nuevo<- subset(df_with_out,
outs > (Tmin) & outs < (Tmax))
return(df_with_out)
}
find_outl <- function(outs, df_with_out) {
primer<-summary(outs)[2]
tercer<-summary(outs)[5]
iqr<-IQR(outs)
Tmin = primer-(1.5*iqr)
Tmax = tercer+(1.5*iqr)
out=outs[which(outs < Tmin | outs > Tmax)]
return(out)
}
find_outl(clients$Weekend, clients)
clients<-rmv_outl(clients$Weekend, clients)
find_outl(clients$Weekend, clients)
ggplot(clients, aes(y=Weekend))+
geom_boxplot()
primer<-summary(clients$Weekend)[2]
tercer<-summary(clients$Weekend)[5]
clients<-rmv_outl(clients$Weekend, clients)
find_outl(clients$Weekend, clients)
clients <- df %>%
group_by(CustomerID) %>%
summarize(AvgPrice = mean(UnitPrice), AvgQuantity = mean(Quantity),
Total = sum(Total))
clients <- df %>%
group_by(InvoiceNo) %>%
summarize(TotalInvoice = sum(Total)) %>%
left_join(invoices, by = "InvoiceNo") %>%
mutate(Weekend = wday(InvoiceDate, week_start = 1) < 6,
UK = as.integer(Country == "United Kingdom")) %>%
group_by(CustomerID) %>%
summarize(Invoices = n(), AvgInvoice = mean(TotalInvoice),
Weekend = mean(Weekend), UK = mean(UK),
PerWeek = n() / as.numeric(difftime(max(InvoiceDate),
min(InvoiceDate),
units = "weeks"))) %>%
mutate(PerWeek = ifelse(PerWeek == Inf, 0, PerWeek)) %>%
left_join(clients, by = "CustomerID")
primer<-summary(clients$Weekend)[2]
tercer<-summary(clients$Weekend)[5]
rmv_outl <- function(outs, df_with_out, primer1, tercer1) {
iqr<-IQR(outs)
Tmin = primer-(1.5*iqr)
Tmax = tercer+(1.5*iqr)
nuevo<- subset(df_with_out, outs > (Tmin) & outs < (Tmax))
return(df_with_out)
}
find_outl <- function(outs, df_with_out, primer, tercer) {
iqr<-IQR(outs)
Tmin = primer-(1.5*iqr)
Tmax = tercer+(1.5*iqr)
out=outs[which(outs < Tmin | outs > Tmax)]
return(out)
}
find_outl <- function(outs, df_with_out, primer1, tercer1) {
iqr<-IQR(outs)
Tmin = primer-(1.5*iqr)
Tmax = tercer+(1.5*iqr)
out=outs[which(outs < Tmin | outs > Tmax)]
return(out)
}
primer<-summary(clients$Weekend)[2]
tercer<-summary(clients$Weekend)[5]
clients<-rmv_outl(clients$Weekend, clients, primer, tercer)
find_outl(clients$Weekend, clients, primer, tercer)
clientes
clients
subset(clientes, clients$Weekend > (Tmin) & clients$Weekend < (Tmax))
subset(clients, clients$Weekend > (Tmin) & clients$Weekend < (Tmax))
clients$Weekend
clients
clients <- df %>%
group_by(CustomerID) %>%
summarize(AvgPrice = mean(UnitPrice), AvgQuantity = mean(Quantity),
Total = sum(Total))
clients <- df %>%
group_by(InvoiceNo) %>%
summarize(TotalInvoice = sum(Total)) %>%
left_join(invoices, by = "InvoiceNo") %>%
mutate(Weekend = wday(InvoiceDate, week_start = 1) < 6,
UK = as.integer(Country == "United Kingdom")) %>%
group_by(CustomerID) %>%
summarize(Invoices = n(), AvgInvoice = mean(TotalInvoice),
Weekend = mean(Weekend), UK = mean(UK),
PerWeek = n() / as.numeric(difftime(max(InvoiceDate),
min(InvoiceDate),
units = "weeks"))) %>%
mutate(PerWeek = ifelse(PerWeek == Inf, 0, PerWeek)) %>%
left_join(clients, by = "CustomerID")
find_outl(clients$Weekend, clients, primer, tercer)
clients <- df %>%
group_by(CustomerID) %>%
summarize(AvgPrice = mean(UnitPrice), AvgQuantity = mean(Quantity),
Total = sum(Total))
clients <- df %>%
group_by(InvoiceNo) %>%
summarize(TotalInvoice = sum(Total)) %>%
left_join(invoices, by = "InvoiceNo") %>%
mutate(Weekend = wday(InvoiceDate, week_start = 1) < 6,
UK = as.integer(Country == "United Kingdom")) %>%
group_by(CustomerID) %>%
summarize(Invoices = n(), AvgInvoice = mean(TotalInvoice),
Weekend = mean(Weekend), UK = mean(UK),
PerWeek = n() / as.numeric(difftime(max(InvoiceDate),
min(InvoiceDate),
units = "weeks"))) %>%
mutate(PerWeek = ifelse(PerWeek == Inf, 0, PerWeek)) %>%
left_join(clients, by = "CustomerID")
clients$Invoices=log(clients$Invoices)
clients$AvgInvoice=log(clients$AvgInvoice)
clients$PerWeek=log(clients$PerWeek)
clients$AvgPrice=log(clients$AvgPrice)
clients$AvgQuantity=log(clients$AvgQuantity)
clients$Total=log(clients$Total)
clients
find_outl(clients$PerWeek, clients, primer, tercer)
clients <- df %>%
group_by(CustomerID) %>%
summarize(AvgPrice = mean(UnitPrice), AvgQuantity = mean(Quantity),
Total = sum(Total))
clients <- df %>%
group_by(InvoiceNo) %>%
summarize(TotalInvoice = sum(Total)) %>%
left_join(invoices, by = "InvoiceNo") %>%
mutate(Weekend = wday(InvoiceDate, week_start = 1) < 6,
UK = as.integer(Country == "United Kingdom")) %>%
group_by(CustomerID) %>%
summarize(Invoices = n(), AvgInvoice = mean(TotalInvoice),
Weekend = mean(Weekend), UK = mean(UK),
PerWeek = n() / as.numeric(difftime(max(InvoiceDate),
min(InvoiceDate),
units = "weeks"))) %>%
mutate(PerWeek = ifelse(PerWeek == Inf, 0, PerWeek)) %>%
left_join(clients, by = "CustomerID")
ggplot(clients, aes(y=PerWeek))+
geom_boxplot()
ggplot(clients, aes(y=PerWeek))+
geom_boxplot()+
scale_y_log10()
clients$PerWeek=log(clients$PerWeek)
primer<-summary(clients$PerWeek)[2]
tercer<-summary(clients$PerWeek)[5]
find_outl(clients$PerWeek, clients, primer, tercer)
ggplot(clients, aes(y=Invoices))+
geom_boxplot()+
scale_y_log10()
boxplot(clients$Invoices)$out
boxplot(log(clients$Invoices))$out
find_outl(clients$Invoices, clients)
clients$Invoices=log(clients$Invoices)
find_outl(clients$Invoices, clients)
boxplot(log(clients$PerWeek))$out
find_outl <- function(outs, df_with_out) {
primer<-summary(outs)[2]
tercer<-summary(outs)[5]
iqr<-IQR(outs)
Tmin = primer-(1.5*iqr)
Tmax = tercer+(1.5*iqr)
out=outs[which(outs < Tmin | outs > Tmax)]
return(out)
}
find_outl(clients$Invoices, clients)
boxplot(clients$PerWeek, log="y")$out
boxplot(y=clients$PerWeek, log="y")$out
boxplot(clients$PerWeek, log="y")$out
boxplot(clients$Invoices, log="y")$out
ggplot(clients, aes(y=Invoices))+
geom_boxplot()+
scale_y_log10()
clients <- df %>%
group_by(CustomerID) %>%
summarize(AvgPrice = mean(UnitPrice), AvgQuantity = mean(Quantity),
Total = sum(Total))
clients <- df %>%
group_by(InvoiceNo) %>%
summarize(TotalInvoice = sum(Total)) %>%
left_join(invoices, by = "InvoiceNo") %>%
mutate(Weekend = wday(InvoiceDate, week_start = 1) < 6,
UK = as.integer(Country == "United Kingdom")) %>%
group_by(CustomerID) %>%
summarize(Invoices = n(), AvgInvoice = mean(TotalInvoice),
Weekend = mean(Weekend), UK = mean(UK),
PerWeek = n() / as.numeric(difftime(max(InvoiceDate),
min(InvoiceDate),
units = "weeks"))) %>%
mutate(PerWeek = ifelse(PerWeek == Inf, 0, PerWeek)) %>%
left_join(clients, by = "CustomerID")
clients$Invoices=log(clients$Invoices)
ggplot(clients, aes(y=Invoices))+
geom_boxplot()+
scale_y_log10()
clients <- df %>%
group_by(CustomerID) %>%
summarize(AvgPrice = mean(UnitPrice), AvgQuantity = mean(Quantity),
Total = sum(Total))
clients <- df %>%
group_by(InvoiceNo) %>%
summarize(TotalInvoice = sum(Total)) %>%
left_join(invoices, by = "InvoiceNo") %>%
mutate(Weekend = wday(InvoiceDate, week_start = 1) < 6,
UK = as.integer(Country == "United Kingdom")) %>%
group_by(CustomerID) %>%
summarize(Invoices = n(), AvgInvoice = mean(TotalInvoice),
Weekend = mean(Weekend), UK = mean(UK),
PerWeek = n() / as.numeric(difftime(max(InvoiceDate),
min(InvoiceDate),
units = "weeks"))) %>%
mutate(PerWeek = ifelse(PerWeek == Inf, 0, PerWeek)) %>%
left_join(clients, by = "CustomerID")
ggplot(clients, aes(y=Invoices))+
geom_boxplot()+
scale_y_log10()
View(clients)
#funcion para encontrar outliers
boxplot(log(clients$Invoices))$out
out
df$InvoiceNo = factor(df$InvoiceNo)
data_list = split(df$Description, df$InvoiceNo)
sales_transac = as(data_list, "transactions")
#modelo 1
sales_rules <- apriori(sales_transac,parameter = list(support = 0.01,
confidence = 0.15,
minlen = 2))
rules_df <- DATAFRAME(sales_rules)
View(rules_df %>%
mutate(similarity = levenshteinSim(as.character(LHS), as.character(RHS))) %>%
filter(similarity < 0.15) %>%
arrange(desc(lift)))
df$InvoiceNo = factor(df$InvoiceNo)
data_list = split(df$Description, df$InvoiceNo)
sales_transac = as(data_list, "transactions")
#modelo 1
sales_rules <- apriori(sales_transac,parameter = list(support = 0.01,
confidence = 0.15,
minlen = 2))
View(sales_rules)
inspect(sales_rules)
rules_df <- DATAFRAME(sales_rules)
View(sales_rules)
View(rules_df)
View(rules_df %>%
mutate(similarity = levenshteinSim(as.character(LHS), as.character(RHS))) %>%
filter(similarity < 0.15) %>%
arrange(desc(lift)))
segment_customers_k
